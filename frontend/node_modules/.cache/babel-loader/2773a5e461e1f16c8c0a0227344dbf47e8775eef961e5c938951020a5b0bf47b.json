{"ast":null,"code":"var _jsxFileName = \"/workspaces/SENG401_project_group14_L01/frontend/src/views/VoiceInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./VoiceInputComponent.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceInputComponent = ({\n  onTextChange\n}) => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const handleVoiceInput = () => {\n    if (!window.webkitSpeechRecognition) {\n      alert(\"Your browser does not support Speech Recognition.\");\n      return;\n    }\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.lang = \"en-US\"; // Set language to English\n    recognition.continuous = false; // Stops after one sentence\n    recognition.interimResults = false; // Get only the final text\n\n    recognition.onstart = () => {\n      console.log(\"Voice recognition started...\");\n    };\n    recognition.onresult = event => {\n      let spokenText = event.results[0][0].transcript;\n\n      // âœ… Remove periods and add commas between words\n      spokenText = spokenText.replace(/\\./g, \"\").split(\" \").join(\", \");\n      setInputText(spokenText);\n      if (onTextChange) {\n        onTextChange(spokenText); // Pass spoken text to parent component\n      }\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error:\", event.error);\n    };\n    recognition.start();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voice-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Enter Your Ingredients:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-with-mic\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"ingredient-input\",\n        placeholder: \"Speak or type your ingredients...\",\n        value: inputText,\n        onChange: e => {\n          setInputText(e.target.value);\n          if (onTextChange) {\n            onTextChange(e.target.value);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mic-button\",\n        onClick: handleVoiceInput,\n        children: \"\\uD83C\\uDFA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceInputComponent, \"FupQuLxG7pBPrulNgTXkcZMsQO8=\");\n_c = VoiceInputComponent;\nexport default VoiceInputComponent;\nvar _c;\n$RefreshReg$(_c, \"VoiceInputComponent\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","VoiceInputComponent","onTextChange","_s","inputText","setInputText","handleVoiceInput","window","webkitSpeechRecognition","alert","recognition","lang","continuous","interimResults","onstart","console","log","onresult","event","spokenText","results","transcript","replace","split","join","onerror","error","start","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/workspaces/SENG401_project_group14_L01/frontend/src/views/VoiceInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./VoiceInputComponent.css\";\n\nconst VoiceInputComponent = ({ onTextChange }) => {\n  const [inputText, setInputText] = useState(\"\");\n\n  const handleVoiceInput = () => {\n    if (!window.webkitSpeechRecognition) {\n      alert(\"Your browser does not support Speech Recognition.\");\n      return;\n    }\n\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.lang = \"en-US\"; // Set language to English\n    recognition.continuous = false; // Stops after one sentence\n    recognition.interimResults = false; // Get only the final text\n\n    recognition.onstart = () => {\n      console.log(\"Voice recognition started...\");\n    };\n\n    recognition.onresult = (event) => {\n      let spokenText = event.results[0][0].transcript;\n      \n      // âœ… Remove periods and add commas between words\n      spokenText = spokenText.replace(/\\./g, \"\").split(\" \").join(\", \");\n\n      setInputText(spokenText);\n      if (onTextChange) {\n        onTextChange(spokenText); // Pass spoken text to parent component\n      }\n    };\n\n    recognition.onerror = (event) => {\n      console.error(\"Speech recognition error:\", event.error);\n    };\n\n    recognition.start();\n  };\n\n  return (\n    <div className=\"voice-input-container\">\n      <h3>Enter Your Ingredients:</h3>\n      <div className=\"input-with-mic\">\n        <input\n          type=\"text\"\n          className=\"ingredient-input\"\n          placeholder=\"Speak or type your ingredients...\"\n          value={inputText}\n          onChange={(e) => {\n            setInputText(e.target.value);\n            if (onTextChange) {\n              onTextChange(e.target.value);\n            }\n          }}\n        />\n        <button className=\"mic-button\" onClick={handleVoiceInput}>\n          ðŸŽ¤\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default VoiceInputComponent;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAACC,MAAM,CAACC,uBAAuB,EAAE;MACnCC,KAAK,CAAC,mDAAmD,CAAC;MAC1D;IACF;IAEA,MAAMC,WAAW,GAAG,IAAIH,MAAM,CAACC,uBAAuB,CAAC,CAAC;IACxDE,WAAW,CAACC,IAAI,GAAG,OAAO,CAAC,CAAC;IAC5BD,WAAW,CAACE,UAAU,GAAG,KAAK,CAAC,CAAC;IAChCF,WAAW,CAACG,cAAc,GAAG,KAAK,CAAC,CAAC;;IAEpCH,WAAW,CAACI,OAAO,GAAG,MAAM;MAC1BC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC7C,CAAC;IAEDN,WAAW,CAACO,QAAQ,GAAIC,KAAK,IAAK;MAChC,IAAIC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,UAAU;;MAE/C;MACAF,UAAU,GAAGA,UAAU,CAACG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MAEhEnB,YAAY,CAACc,UAAU,CAAC;MACxB,IAAIjB,YAAY,EAAE;QAChBA,YAAY,CAACiB,UAAU,CAAC,CAAC,CAAC;MAC5B;IACF,CAAC;IAEDT,WAAW,CAACe,OAAO,GAAIP,KAAK,IAAK;MAC/BH,OAAO,CAACW,KAAK,CAAC,2BAA2B,EAAER,KAAK,CAACQ,KAAK,CAAC;IACzD,CAAC;IAEDhB,WAAW,CAACiB,KAAK,CAAC,CAAC;EACrB,CAAC;EAED,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpC7B,OAAA;MAAA6B,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCjC,OAAA;MAAK4B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B7B,OAAA;QACEkC,IAAI,EAAC,MAAM;QACXN,SAAS,EAAC,kBAAkB;QAC5BO,WAAW,EAAC,mCAAmC;QAC/CC,KAAK,EAAEhC,SAAU;QACjBiC,QAAQ,EAAGC,CAAC,IAAK;UACfjC,YAAY,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAC5B,IAAIlC,YAAY,EAAE;YAChBA,YAAY,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAC9B;QACF;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFjC,OAAA;QAAQ4B,SAAS,EAAC,YAAY;QAACY,OAAO,EAAElC,gBAAiB;QAAAuB,QAAA,EAAC;MAE1D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA3DIF,mBAAmB;AAAAwC,EAAA,GAAnBxC,mBAAmB;AA6DzB,eAAeA,mBAAmB;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}